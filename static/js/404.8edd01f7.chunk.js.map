{"version":3,"file":"static/js/404.8edd01f7.chunk.js","mappings":"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","sources":["api/hooks/categories.mock.ts","api/hooks/products.mock.ts","api/hooks/register.mock.ts","mocks/handlers.ts","mocks/browser.ts"],"sourcesContent":["import { rest } from 'msw';\n\nimport { getCategoriesPath } from './useGetCategories';\n\nexport const categoriesMockHandler = [\n  rest.get(getCategoriesPath(), (_, res, ctx) => {\n    return res(ctx.json(CATEGORIES_RESPONSE_DATA));\n  }),\n];\n\nconst CATEGORIES_RESPONSE_DATA = {\n  totalElements: 2,\n  totalPages: 1,\n  first: true,\n  last: true,\n  size: 10,\n  content: [\n    {\n      id: 2920,\n      name: '생일',\n      description: '감동을 높여줄 생일 선물 리스트',\n      color: '#5949a3',\n      imageUrl:\n        'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\n    },\n    {\n      id: 2930,\n      name: '교환권',\n      description: '놓치면 후회할 교환권 특가',\n      color: '#9290C3',\n      imageUrl:\n        'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20240131153049_5a22b137a8d346e9beb020a7a7f4254a.jpg',\n    },\n  ],\n  number: 0,\n  sort: {\n    empty: true,\n    sorted: false,\n    unsorted: true,\n  },\n  numberOfElements: 2,\n  pageable: {\n    pageNumber: 0,\n    pageSize: 10,\n    sort: {\n      empty: true,\n      sorted: false,\n      unsorted: true,\n    },\n    offset: 0,\n    paged: true,\n    unpaged: false,\n  },\n  empty: false,\n};","import { rest } from 'msw';\n\nimport { getProductDetailPath } from './useGetProductDetail';\nimport { getProductOptionsPath } from './useGetProductOptions';\nimport { getProductsPath } from './useGetProducts';\n\nexport const productsMockHandler = [\n  rest.get(\n    getProductsPath({\n      categoryId: '2920',\n    }),\n    (_, res, ctx) => {\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\n    },\n  ),\n  rest.get(\n    getProductsPath({\n      categoryId: '2930',\n    }),\n    (_, res, ctx) => {\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\n    },\n  ),\n  rest.get(getProductDetailPath(':productId'), (req, res, ctx) => {\n    const { productId } = req.params;\n    const productIdStr = Array.isArray(productId) ? productId[0] : productId;\n    const product = PRODUCTS_MOCK_DATA.content.find(\n      (item) => item.id === parseInt(productIdStr, 10)\n    );\n\n    if (product) {\n      return res(ctx.json(product));\n    } else {\n      return res(ctx.status(404), ctx.json({ message: 'Product not found' }));\n    }\n  }),\n  rest.get(getProductOptionsPath(':productId'), (req, res, ctx) => {\n    const { productId } = req.params;\n    const productIdStr = Array.isArray(productId) ? productId[0] : productId;\n    return res(\n      ctx.json([\n        {\n          id: 1,\n          name: 'Option A',\n          quantity: 10,\n          productId: parseInt(productIdStr, 10),\n        },\n        {\n          id: 2,\n          name: 'Option B',\n          quantity: 20,\n          productId: parseInt(productIdStr, 10),\n        },\n      ]),\n    );\n  }),\n];\n\nconst PRODUCTS_MOCK_DATA = {\n  content: [\n    {\n      id: 3245119,\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\n      price: 145000,\n    },\n    {\n      id: 2263833,\n      name: '외식 통합권 10만원권',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\n      price: 100000,\n    },\n    {\n      id: 6502823,\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\n      price: 108000,\n    },\n    {\n      id: 1181831,\n      name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\n      price: 122000,\n    },\n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },\n  ],\n  number: 0,\n  totalElements: 5,\n  size: 10,\n  last: true,\n};","import { rest } from 'msw';\n\ninterface UserBody {\n  email: string;\n  password: string;\n}\n\nexport const registerMockHandler = [\n  rest.post<UserBody>('/api/members/register', (req, res, ctx) => {\n    const { email, password } = req.body;\n\n    if (email && password) {\n      return res(\n        ctx.status(201),\n        ctx.json({\n          email,\n          token: 'mock-token',\n        })\n      );\n    } else {\n      return res(\n        ctx.status(400),\n        ctx.json({\n          error: 'Invalid input',\n        })\n      );\n    }\n  }),\n];","import { rest } from 'msw';\n\ninterface Product {\n  id: number;\n  name: string;\n  price: number;\n  imageUrl: string;\n}\n\ninterface WishlistItem {\n  id: number;\n  product: Product;\n}\n\nconst wishlist: WishlistItem[] = [];\n\nexport const handlers = [\n  rest.get('/api/detail', (_req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({ data: 'mocked detail data' })\n    );\n  }),\n  rest.get('/api/options', (_req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({ data: 'mocked options data' })\n    );\n  }),\n  rest.post('/api/wishes', (req, res, ctx) => {\n    const { productId, name, price, imageUrl } = req.body as {\n      productId: number;\n      name: string;\n      price: number;\n      imageUrl: string;\n    };\n    const newWish = {\n      id: Date.now(),\n      product: {\n        id: productId,\n        name,\n        price,\n        imageUrl,\n      }\n    };\n    wishlist.push(newWish);\n    return res(\n      ctx.status(201),\n      ctx.json(newWish)\n    );\n  }),\n  rest.get('/api/wishes', (req, res, ctx) => {\n    const page = Number(req.url.searchParams.get('page')) || 0;\n    const size = Number(req.url.searchParams.get('size')) || 10;\n    const sortedWishlist = wishlist.slice().sort((a, b) => b.id - a.id);\n    const paginatedWishlist = sortedWishlist.slice(page * size, (page + 1) * size);\n\n    return res(\n      ctx.status(200),\n      ctx.json({\n        content: paginatedWishlist,\n        pageable: {\n          sort: {\n            sorted: true,\n            unsorted: false,\n            empty: false\n          },\n          pageNumber: page,\n          pageSize: size,\n          offset: 0,\n          unpaged: false,\n          paged: true\n        },\n        totalPages: Math.ceil(wishlist.length / size),\n        totalElements: wishlist.length,\n        last: page === Math.ceil(wishlist.length / size) - 1,\n        number: page,\n        size: size,\n        numberOfElements: paginatedWishlist.length,\n        first: page === 0,\n        empty: paginatedWishlist.length === 0\n      })\n    );\n  }),\n  rest.delete('/api/wishes/:wishId', (req, res, ctx) => {\n    const { wishId } = req.params as { wishId: string };\n    const index = wishlist.findIndex((item) => item.id === parseInt(wishId));\n\n    if (index === -1) {\n      return res(ctx.status(404), ctx.json({ error: 'Wish not found' }));\n    }\n\n    wishlist.splice(index, 1);\n    return res(ctx.status(204));\n  }),\n];","import { setupWorker } from 'msw';\n\nimport { categoriesMockHandler } from '@/api/hooks/categories.mock';\nimport { productsMockHandler } from '@/api/hooks/products.mock';\nimport { registerMockHandler } from '@/api/hooks/register.mock';\n\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(\n  ...handlers,\n  ...categoriesMockHandler,\n  ...productsMockHandler,\n  ...registerMockHandler\n);"],"names":["categoriesMockHandler","rest","get","getCategoriesPath","_","res","ctx","json","CATEGORIES_RESPONSE_DATA","totalElements","totalPages","first","last","size","content","id","name","description","color","imageUrl","number","sort","empty","sorted","unsorted","numberOfElements","pageable","pageNumber","pageSize","offset","paged","unpaged","productsMockHandler","getProductsPath","categoryId","PRODUCTS_MOCK_DATA","getProductDetailPath","req","productId","params","productIdStr","Array","isArray","product","find","item","parseInt","status","message","getProductOptionsPath","quantity","price","registerMockHandler","post","email","password","body","token","error","wishlist","handlers","_req","data","newWish","Date","now","push","page","Number","url","searchParams","paginatedWishlist","slice","a","b","Math","ceil","length","delete","wishId","index","findIndex","splice","worker","setupWorker"],"sourceRoot":""}